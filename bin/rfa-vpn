#!/bin/bash

# See "$ZENDESK_CODE_DIR/kubectl_config/bin/trigger_vpn_connection.applescript"

clickops() {
  local main=$1
  local debug_log="-- log"
  osascript <<SCRIPT >/dev/null
    tell application "System Events" to tell process "GlobalProtect"
      local dialog

      try
        set dialog to first window whose first button's name is "Global Protect Options Menu"
      on error err
        click menu bar item 1 of menu bar 2
        delay 1 # FIXME
        set dialog to first window whose first button's name is "Global Protect Options Menu"
      end

      $debug_log dialog

      try
        local connectButtons
        local disconnectButtons
        set connectButtons to every button of dialog whose name is "Connect"
        set disconnectButtons to every button of dialog whose name is "Disconnect"
        $debug_log connectButtons
        $debug_log disconnectButtons

        if "$main" is "connect"
          if length of connectButtons is 1 then
            click first item of connectButtons
            # FIXME
            # At this point we might want to poll the dialog for the disconnect button to appear
            # or better, for the "connecting" stuff to disappear
          else if length of disconnectButtons is 1 then
            $debug_log "We're already connected - nothing to do"
          else
            error "No connect button to click"
          end
        else if "$main" is "disconnect"
          if length of disconnectButtons is 1 then
            click first item of disconnectButtons
            # FIXME
            # At this point we might want to poll the dialog for the connect button to appear
            # or better, for the "disconnecting" stuff to disappear
          else if length of connectButtons is 1 then
            $debug_log "We're already not connected - nothing to do"
          else
            error "No disconnect button to click"
          end
        else
          error "Unrecognised command"
        end

        click menu bar item 1 of menu bar 2 # close dialog
      on error err
        click menu bar item 1 of menu bar 2 # close dialog
      end
    end
SCRIPT
}

waitForEval() {
  local fragment=$1
  local i

  for ((i=0; $i<20; i=$i+1)) ; do
    sleep 1
    if eval "$fragment" ; then
      break
    fi
  done
}

isUp() {
  netstat -rn -f inet | grep -q 'default.*tun'
}

setSticky() {
  local DESIRED_STATE=$HOME/services/enabled/vpn-always/desired-state
  echo "$1" > $DESIRED_STATE 2> /dev/null
}

if [ "$1" == "--is-up" ] ; then
  isUp
  exit $?
elif [ "${1:---up}" == "--up" ] ; then
  if ! isUp ; then
    networksetup -setv6LinkLocal Wi-Fi
    clickops connect
    if [ "$2" != "--no-wait" ] ; then
      waitForEval "isUp"
    fi
  fi
elif [ "$1" == "--down" ] ; then
  if isUp ; then
    clickops disconnect
    if [ "$2" != "--no-wait" ] ; then
      waitForEval "! isUp"
    fi
  fi
elif [ "$1" == "--stay-up" ] ; then
  setSticky up
elif [ "$1" == "--stay-down" ] ; then
  setSticky down
else
  echo "Unrecognised usage ($1)"
  exit 2
fi
