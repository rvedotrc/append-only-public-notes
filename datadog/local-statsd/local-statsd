#!/usr/bin/env ruby
# frozen_string_literal: true

ENV['PORT'] = '8126' unless ENV.key?('PORT')

require 'json'
require 'msgpack'
require 'sinatra'

$stdout.sync = true
disable :show_exceptions

post('/*') do
  begin
    body =
      if request.request_method == "POST"
        body = request.body.read
        case request.content_type
        when "application/msgpack"
          { msgpack: MessagePack.unpack(body) }
        when "application/json"
          { json: JSON.parse(body) }
        else
          { raw: body.encode("utf-8", invalid: :replace, undef: :replace) }
        end
      end

    puts JSON.generate({
      body: body,
      env: request.env.select {|k| k.match?(/^[A-Z]/) },
    })
  rescue => e
    puts e
  end

  # [404, {}, "no\n"]
  ""
end

get('/info') do
  content_type "application/json"
  JSON.generate(
    {
      "version": "7.45.1",
      "git_commit": "102cdaf",
      "endpoints": [
        "/v0.3/traces",
        "/v0.3/services",
        "/v0.4/traces",
        "/v0.4/services",
        "/v0.5/traces",
        "/v0.7/traces",
        "/profiling/v1/input",
        "/telemetry/proxy/",
        "/v0.6/stats",
        "/v0.1/pipeline_stats",
        "/evp_proxy/v1/",
        "/evp_proxy/v2/",
        "/evp_proxy/v3/",
        "/debugger/v1/input",
        "/symdb/v1/input",
        "/dogstatsd/v1/proxy",
        "/dogstatsd/v2/proxy",
        "/config/set"
      ],
      "client_drop_p0s": true,
      "span_meta_structs": true,
      "long_running_spans": true,
      "config": {
        "default_env": "staging",
        "target_tps": 4,
        "max_eps": 200,
        "receiver_port": 8126,
        "receiver_socket": "",
        "connection_limit": 0,
        "receiver_timeout": 0,
        "max_request_bytes": 26214400,
        "statsd_port": 8125,
        "max_memory": 0,
        "max_cpu": 0,
        "analyzed_spans_by_service": {},
        "obfuscation": {
          "elastic_search": false,
          "mongo": false,
          "sql_exec_plan": false,
          "sql_exec_plan_normalize": false,
          "http": {
            "remove_query_string": false,
            "remove_path_digits": false
          },
          "remove_stack_traces": false,
          "redis": false,
          "memcached": false
        }
      }
    }
  )
end

__END__

There's also 'GET /info' but the response format there is like this:

{
	"version": "7.45.1",
	"git_commit": "102cdaf",
	"endpoints": [
		"/v0.3/traces",
		"/v0.3/services",
		"/v0.4/traces",
		"/v0.4/services",
		"/v0.5/traces",
		"/v0.7/traces",
		"/profiling/v1/input",
		"/telemetry/proxy/",
		"/v0.6/stats",
		"/v0.1/pipeline_stats",
		"/evp_proxy/v1/",
		"/evp_proxy/v2/",
		"/evp_proxy/v3/",
		"/debugger/v1/input",
		"/symdb/v1/input",
		"/dogstatsd/v1/proxy",
		"/dogstatsd/v2/proxy",
		"/config/set"
	],
	"client_drop_p0s": true,
	"span_meta_structs": true,
	"long_running_spans": true,
	"config": {
		"default_env": "staging",
		"target_tps": 4,
		"max_eps": 200,
		"receiver_port": 8126,
		"receiver_socket": "",
		"connection_limit": 0,
		"receiver_timeout": 0,
		"max_request_bytes": 26214400,
		"statsd_port": 8125,
		"max_memory": 0,
		"max_cpu": 0,
		"analyzed_spans_by_service": {},
		"obfuscation": {
			"elastic_search": false,
			"mongo": false,
			"sql_exec_plan": false,
			"sql_exec_plan_normalize": false,
			"http": {
				"remove_query_string": false,
				"remove_path_digits": false
			},
			"remove_stack_traces": false,
			"redis": false,
			"memcached": false
		}
	}
}
